{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1zZbU5QXY3ZEtfsKWHQC-JGRhxn7rwGmd","timestamp":1731404112150}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["ФИО"],"metadata":{"id":"8hJfL9b2l439"}},{"cell_type":"code","source":["Пушмин Тимофей Анатольевич"],"metadata":{"id":"wRnqvYOkl6EX"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Дисклеймер"],"metadata":{"id":"weOtPwPQmgpD"}},{"cell_type":"markdown","source":["В данной практике вам необходимо применить все ваши знания по темам:\n","\n","- Функции\n","- Словари\n","- Списки\n","- Множества\n","- Условные конструкции\n","- Запросы\n","\n","и все что было изучено на прошлых практических занятиях\n","\n","В каждом задании кратко описаны функции, которые необходимо реализовать, детали реализации вы должны продумать самостоятельно"],"metadata":{"id":"LznB3uscmjDa"}},{"cell_type":"markdown","source":["# Задание 0"],"metadata":{"id":"7nSJIqkTvC_C"}},{"cell_type":"markdown","source":["Создайте функцию по нахождению уникальных элементов из двух списков\n","\n","\n","\n","```\n","a = [1, 2, 3, 4]\n","b = [3, 4, 5, 6]\n","```\n","\n"],"metadata":{"id":"exACjTiVvGUe"}},{"cell_type":"code","source":["def unique_elements(a, b):\n","    element_array = []\n","    for i in a:\n","        if i not in b and i not in element_array:\n","            element_array.append(i)\n","    for i in b:\n","        if i not in a and i not in element_array:\n","            element_array.append(i)\n","    return element_array\n","\n","\n","a = [1, 2, 3, 4]\n","b = [3, 4, 5, 6]\n","print(*unique_elements(a, b))"],"metadata":{"id":"u1tFY3WHz-iO","executionInfo":{"status":"ok","timestamp":1731405549895,"user_tz":-300,"elapsed":387,"user":{"displayName":"Тимофей Пушмин","userId":"15316752486813990329"}},"outputId":"f82c46db-e440-4533-d0c4-eee6de8cce90","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1 2 5 6\n"]}]},{"cell_type":"markdown","source":["# Задание 1"],"metadata":{"id":"SVWNlBALpCNo"}},{"cell_type":"markdown","source":["Симулятор виртуального питомца\n","\n","Цель: создать виртуальный симулятор домашних животных, в котором пользователи смогут заводить питомцев и ухаживать за ними.\n","\n","Требования:\n","\n","- Функция для усыновления питомца (имя, тип, возраст).\n","- Функция для того, чтобы покормить питомца, поиграть с ним или уложить его спать.\n","- Функция для отображения состояния питомца (голод, радость, энергия)."],"metadata":{"id":"RcKA-VEqpC7f"}},{"cell_type":"code","source":["import random\n","\n","\n","def adoption(): #усыновление питомца\n","    name = input('Введите имя питомца: ')\n","    type = input('Введите тип питомца: ')\n","    age = input('Введите возраст питомца: ')\n","    pet = {\n","        'name': name,\n","        'type': type,\n","        'age': age,\n","        'hunger': random.randint(20, 100),\n","        'happiness': random.randint(20, 100),\n","        'energy': random.randint(20, 100)\n","    }\n","    print(f\"Вы усыновили {pet['name']}, {pet['type']}, возраст: {pet['age']}\")\n","    return pet\n","\n","\n","def feed(pet): #покормить\n","    if pet['hunger'] > 0:\n","        pet['hunger'] -= 10\n","        pet['happiness'] += 5\n","        if pet['hunger'] < 0:\n","            pet['hunger'] = 0\n","        elif pet['happiness'] > 100:\n","            pet['happiness'] = 100\n","        print(f\"Вы покормили {pet['name']}. Уровень голода: {pet['hunger']}\")\n","    else:\n","        print(f\"{pet['name']} не хочет есть!\")\n","\n","\n","def play(pet): # поиграть\n","    if pet['energy'] > 0:\n","        pet['energy'] -= 10\n","        pet['happiness'] += 15\n","        if pet['energy'] < 0:\n","            pet['energy'] = 0\n","        elif pet['happiness'] > 100:\n","            pet['happiness'] = 100\n","        print(f\"Вы поиграли с {pet['name']}. \"\n","              f\"Уровень энергии: {pet['energy']}\")\n","    else:\n","        print(f\"{pet['name']} очень устал.\")\n","\n","\n","def sleep(pet): # уложить спать\n","    pet['energy'] = 100\n","    pet['happiness'] += 5\n","    pet['hunger'] += 20\n","    if pet['happiness'] > 100:\n","        pet['happiness'] = 100\n","    elif pet['hunger'] > 100:\n","        pet['hunger'] = 100\n","    print(f\"{pet['name']} поспал. Уровень энергии: {pet['energy']}\")\n","\n","\n","def state(pet): #состояние питомца\n","    print(f\"Статус питомца {pet['name']}:\")\n","    print(f\"Голод: {pet['hunger']}\")\n","    print(f\"Радость: {pet['happiness']}\")\n","    print(f\"Энергия: {pet['energy']}\")\n","\n","\n","def main():\n","    pets = []\n","    current_pet = None\n","    while True:\n","        print('1. Усыновить питомца')\n","        print('2. Выбрать питомца')\n","        if current_pet:\n","            print(f\"3. Ухаживать за питоцем {current_pet['name']}\")\n","        print('4. Отобразить состояние выбранного питомца')\n","        print('5. Завершение работы')\n","\n","        choice = input('Выберите действие: ')\n","        if choice == '1':\n","            pet = adoption()\n","            pets.append(pet)\n","\n","        elif choice == '2':\n","            if pets:\n","                print('\\nВыберите питомца для ухода:')\n","                for i, pet in enumerate(pets):\n","                    print(f\"{i + 1}. {pet['name']}, \"\n","                          f\"{pet['type']}, возраст {pet['age']}\")\n","                pet_choice = int(input('Введите номер питомца: ')) - 1\n","                if 0 <= pet_choice < len(pets):\n","                    current_pet = pets[pet_choice]\n","                    print(f\"Вы выбрали питомца {current_pet['name']}.\")\n","                else:\n","                    print('Ошибка. Выберите питомца снова.')\n","            else:\n","                print('Питомцы не найдены.')\n","\n","        elif choice == '3':\n","            if current_pet:\n","                print('\\nЧто вы хотите сделать с питомцем?')\n","                print('1. Покормить питомца')\n","                print('2. Поиграть с питомцем')\n","                print('3. Уложить спать')\n","                activity_choice = input('Выберите действие: ')\n","                if activity_choice == '1':\n","                    feed(current_pet)\n","                elif activity_choice == '2':\n","                    play(current_pet)\n","                elif activity_choice == '3':\n","                    sleep(current_pet)\n","                else:\n","                    print('Ошибка. Выберите действие ещё раз.')\n","            else:\n","                print('Вы не выбрали питомца.')\n","\n","        elif choice == '4':\n","            if current_pet:\n","                state(current_pet)\n","            else:\n","                print('Вы не выбрали питомца.')\n","\n","        elif choice == '5':\n","            print('Работа завершена')\n","            break\n","        else:\n","            print('Ошибка')\n","\n","\n","if __name__ == \"__main__\":\n","    main()"],"metadata":{"id":"hE7mF-HXpJLO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731788365314,"user_tz":-300,"elapsed":188970,"user":{"displayName":"Тимофей Пушмин","userId":"15316752486813990329"}},"outputId":"220eaf78-aad9-4a06-9569-bc2d84d48095"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1. Усыновить питомца\n","2. Выбрать питомца\n","4. Отобразить состояние выбранного питомца\n","5. Завершение работы\n","Выберите действие: 1\n","Введите имя питомца: Барсик\n","Введите тип питомца: кот\n","Введите возраст питомца: 3\n","Вы усыновили Барсик, кот, возраст: 3\n","1. Усыновить питомца\n","2. Выбрать питомца\n","4. Отобразить состояние выбранного питомца\n","5. Завершение работы\n","Выберите действие: 1\n","Введите имя питомца: Том\n","Введите тип питомца: собака\n","Введите возраст питомца: 5\n","Вы усыновили Том, собака, возраст: 5\n","1. Усыновить питомца\n","2. Выбрать питомца\n","4. Отобразить состояние выбранного питомца\n","5. Завершение работы\n","Выберите действие: 4\n","Вы не выбрали питомца.\n","1. Усыновить питомца\n","2. Выбрать питомца\n","4. Отобразить состояние выбранного питомца\n","5. Завершение работы\n","Выберите действие: 2\n","\n","Выберите питомца для ухода:\n","1. Барсик, кот, возраст 3\n","2. Том, собака, возраст 5\n","Введите номер питомца: 2\n","Вы выбрали питомца Том.\n","1. Усыновить питомца\n","2. Выбрать питомца\n","3. Ухаживать за питоцем Том\n","4. Отобразить состояние выбранного питомца\n","5. Завершение работы\n","Выберите действие: 4\n","Статус питомца Том:\n","Голод: 43\n","Радость: 70\n","Энергия: 33\n","1. Усыновить питомца\n","2. Выбрать питомца\n","3. Ухаживать за питоцем Том\n","4. Отобразить состояние выбранного питомца\n","5. Завершение работы\n","Выберите действие: 3\n","\n","Что вы хотите сделать с питомцем?\n","1. Покормить питомца\n","2. Поиграть с питомцем\n","3. Уложить спать\n","Выберите действие: 1\n","Вы покормили Том. Уровень голода: 33\n","1. Усыновить питомца\n","2. Выбрать питомца\n","3. Ухаживать за питоцем Том\n","4. Отобразить состояние выбранного питомца\n","5. Завершение работы\n","Выберите действие: 3\n","\n","Что вы хотите сделать с питомцем?\n","1. Покормить питомца\n","2. Поиграть с питомцем\n","3. Уложить спать\n","Выберите действие: 2\n","Вы поиграли с Том. Уровень энергии: 23\n","1. Усыновить питомца\n","2. Выбрать питомца\n","3. Ухаживать за питоцем Том\n","4. Отобразить состояние выбранного питомца\n","5. Завершение работы\n","Выберите действие: 3\n","\n","Что вы хотите сделать с питомцем?\n","1. Покормить питомца\n","2. Поиграть с питомцем\n","3. Уложить спать\n","Выберите действие: 3\n","Том поспал. Уровень энергии: 100\n","1. Усыновить питомца\n","2. Выбрать питомца\n","3. Ухаживать за питоцем Том\n","4. Отобразить состояние выбранного питомца\n","5. Завершение работы\n","Выберите действие: 2\n","\n","Выберите питомца для ухода:\n","1. Барсик, кот, возраст 3\n","2. Том, собака, возраст 5\n","Введите номер питомца: 1\n","Вы выбрали питомца Барсик.\n","1. Усыновить питомца\n","2. Выбрать питомца\n","3. Ухаживать за питоцем Барсик\n","4. Отобразить состояние выбранного питомца\n","5. Завершение работы\n","Выберите действие: 3\n","\n","Что вы хотите сделать с питомцем?\n","1. Покормить питомца\n","2. Поиграть с питомцем\n","3. Уложить спать\n","Выберите действие: 3\n","Барсик поспал. Уровень энергии: 100\n","1. Усыновить питомца\n","2. Выбрать питомца\n","3. Ухаживать за питоцем Барсик\n","4. Отобразить состояние выбранного питомца\n","5. Завершение работы\n","Выберите действие: 2\n","\n","Выберите питомца для ухода:\n","1. Барсик, кот, возраст 3\n","2. Том, собака, возраст 5\n","Введите номер питомца: 2\n","Вы выбрали питомца Том.\n","1. Усыновить питомца\n","2. Выбрать питомца\n","3. Ухаживать за питоцем Том\n","4. Отобразить состояние выбранного питомца\n","5. Завершение работы\n","Выберите действие: 4\n","Статус питомца Том:\n","Голод: 53\n","Радость: 95\n","Энергия: 100\n","1. Усыновить питомца\n","2. Выбрать питомца\n","3. Ухаживать за питоцем Том\n","4. Отобразить состояние выбранного питомца\n","5. Завершение работы\n","Выберите действие: 5\n","Работа завершена\n"]}]},{"cell_type":"markdown","source":["# Задание 2"],"metadata":{"id":"qZ7qFQnmssNd"}},{"cell_type":"markdown","source":["Рыцарь и дракон\n","\n","Цель: создать небольшую игру, в которой вам необходимо играть за рыцаря и сразиться с драконом\n","\n","Требования:\n","\n","- Создание персонажа (имя, информация о доспехах, оружии, урон, здоровье)\n","- Управление персонажем и мини сюжет\n","- Создание дракона (Имя, информация о здоровье и уроне)\n","- Боевая система (нанесение и получение урона, урон должен быть случайным в заданном диапазоне)\n","- Реализовать бой между драконом и рыцарем"],"metadata":{"id":"UaccTe7ltNvg"}},{"cell_type":"code","source":["import random\n","\n","\n","def knight_creation():\n","    print('Давайте создадим рыцаря.')\n","    name = input('Введите имя: ')\n","    armour = int(input('Введите прочность доспехов: '))\n","    weapon = input('Введите оружие: ')\n","    damage_min = int(input('Введите минимальное значение урона: '))\n","    damage_max = int(input('Введите максимальное значение урона: '))\n","    health = int(input('Введите уровень вашего здоровья: '))\n","    knight = {\n","        'name': name,\n","        'armour': armour,\n","        'weapon': weapon,\n","        'damage': (damage_min, damage_max),\n","        'health': health\n","    }\n","    return knight\n","\n","\n","def dragon_creation():\n","    print('\\nДавайте создадим дракона.')\n","    name = input('Введите имя: ')\n","    health = int(input('Введите уровень здоровья дракона: '))\n","    damage_min = int(input('Введите минимальное значение урона: '))\n","    damage_max = int(input('Введите максимальное значение урона: '))\n","    dragon = {\n","        'name': name,\n","        'health': health,\n","        'damage': (damage_min, damage_max),\n","    }\n","    return dragon\n","\n","\n","def attack(attacker):\n","    return random.randint(*attacker['damage'])\n","\n","\n","def do_damage(target, damage):\n","    target['health'] -= damage\n","    if target['health'] < 0:\n","        target['health'] = 0\n","\n","\n","def battle(knight, dragon):\n","    print(f\"\\nРыцарь {knight['name']} начинает сражение \"\n","          f\"с драконом {dragon['name']}.\")\n","    print(f\"Показатели рыцаря (здоровье: {knight['health']}, \"\n","          f\"доспехи: {knight['armour']}, оружие: {knight['weapon']}).\")\n","    print(f\"Показатели дракона (здоровье: {dragon['health']}).\\n\")\n","    while knight['health'] > 0 and dragon['health'] > 0:\n","        knight_damage = attack(knight)\n","        do_damage(dragon, knight_damage)\n","        print(f\"{knight['name']} наносит {knight_damage} урона дракону. \"\n","              f\"Здоровье дракона {dragon['name']}: {dragon['health']}.\")\n","        if dragon[\"health\"] <= 0:\n","            print(f\"\\n{knight['name']} победил дракона {dragon['name']}!\")\n","            print('Игра завершена')\n","            break\n","        dragon_damage = attack(dragon)\n","        do_damage(knight, dragon_damage)\n","        print(f\"{dragon['name']} наносит {dragon_damage} урона рыцарю. \"\n","              f\"Здоровье рыцаря {knight['name']}: {knight['health']}.\")\n","        if knight[\"health\"] <= 0:\n","            print(f\"\\n{dragon['name']} победил рыцаря {knight['name']}!\")\n","            print('Игра завершена')\n","            break\n","\n","\n","def main():\n","    print('Игра \"Рыцарь и дракон\"')\n","    knight = knight_creation()\n","    dragon = dragon_creation()\n","    battle(knight, dragon)\n","\n","\n","if __name__ == '__main__':\n","    main()"],"metadata":{"id":"LCcxp5Q0srjY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731788844860,"user_tz":-300,"elapsed":180260,"user":{"displayName":"Тимофей Пушмин","userId":"15316752486813990329"}},"outputId":"8fd18cbd-6a75-40ad-db66-a05e550e76e8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Игра \"Рыцарь и дракон\"\n","Давайте создадим рыцаря.\n","Введите имя: Илья Муромец\n","Введите прочность доспехов: 50\n","Введите оружие: меч\n","Введите минимальное значение урона: 45\n","Введите максимальное значение урона: 56\n","Введите уровень вашего здоровья: 1000\n","\n","Давайте создадим дракона.\n","Введите имя: Змей Горыныч\n","Введите уровень здоровья дракона: 1200\n","Введите минимальное значение урона: 60\n","Введите максимальное значение урона: 85\n","\n","Рыцарь Илья Муромец начинает сражение с драконом Змей Горыныч.\n","Показатели рыцаря (здоровье: 1000, доспехи: 50, оружие: меч).\n","Показатели дракона (здоровье: 1200).\n","\n","Илья Муромец наносит 55 урона дракону. Здоровье дракона Змей Горыныч: 1145.\n","Змей Горыныч наносит 78 урона рыцарю. Здоровье рыцаря Илья Муромец: 922.\n","Илья Муромец наносит 49 урона дракону. Здоровье дракона Змей Горыныч: 1096.\n","Змей Горыныч наносит 70 урона рыцарю. Здоровье рыцаря Илья Муромец: 852.\n","Илья Муромец наносит 50 урона дракону. Здоровье дракона Змей Горыныч: 1046.\n","Змей Горыныч наносит 69 урона рыцарю. Здоровье рыцаря Илья Муромец: 783.\n","Илья Муромец наносит 46 урона дракону. Здоровье дракона Змей Горыныч: 1000.\n","Змей Горыныч наносит 74 урона рыцарю. Здоровье рыцаря Илья Муромец: 709.\n","Илья Муромец наносит 52 урона дракону. Здоровье дракона Змей Горыныч: 948.\n","Змей Горыныч наносит 72 урона рыцарю. Здоровье рыцаря Илья Муромец: 637.\n","Илья Муромец наносит 53 урона дракону. Здоровье дракона Змей Горыныч: 895.\n","Змей Горыныч наносит 75 урона рыцарю. Здоровье рыцаря Илья Муромец: 562.\n","Илья Муромец наносит 47 урона дракону. Здоровье дракона Змей Горыныч: 848.\n","Змей Горыныч наносит 80 урона рыцарю. Здоровье рыцаря Илья Муромец: 482.\n","Илья Муромец наносит 55 урона дракону. Здоровье дракона Змей Горыныч: 793.\n","Змей Горыныч наносит 83 урона рыцарю. Здоровье рыцаря Илья Муромец: 399.\n","Илья Муромец наносит 53 урона дракону. Здоровье дракона Змей Горыныч: 740.\n","Змей Горыныч наносит 71 урона рыцарю. Здоровье рыцаря Илья Муромец: 328.\n","Илья Муромец наносит 49 урона дракону. Здоровье дракона Змей Горыныч: 691.\n","Змей Горыныч наносит 70 урона рыцарю. Здоровье рыцаря Илья Муромец: 258.\n","Илья Муромец наносит 50 урона дракону. Здоровье дракона Змей Горыныч: 641.\n","Змей Горыныч наносит 76 урона рыцарю. Здоровье рыцаря Илья Муромец: 182.\n","Илья Муромец наносит 51 урона дракону. Здоровье дракона Змей Горыныч: 590.\n","Змей Горыныч наносит 75 урона рыцарю. Здоровье рыцаря Илья Муромец: 107.\n","Илья Муромец наносит 48 урона дракону. Здоровье дракона Змей Горыныч: 542.\n","Змей Горыныч наносит 80 урона рыцарю. Здоровье рыцаря Илья Муромец: 27.\n","Илья Муромец наносит 45 урона дракону. Здоровье дракона Змей Горыныч: 497.\n","Змей Горыныч наносит 82 урона рыцарю. Здоровье рыцаря Илья Муромец: 0.\n","\n","Змей Горыныч победил рыцаря Илья Муромец!\n","Игра завершена\n"]}]},{"cell_type":"markdown","source":["# Задание 3\n"],"metadata":{"id":"N8oFiEXol3e2"}},{"cell_type":"markdown","source":["Цель - создать менеджера команды Pokémon, который позволит пользователям:\n","\n","- Добавлять покемонов в свою команду. (если такого покемона еще нет в команде)\n","- Удалять покемонов из их команды.\n","- Просматривать подробную информацию обо всех покемонах в команде.\n","- Находить покемона по имени.\n","- Устраивать тренировочный бой между двумя покемонами\n","\n","Для данной задачи используйте: https://pokeapi.co/\n"],"metadata":{"id":"9p4WQG_Vl7wB"}},{"cell_type":"code","source":["import requests\n","\n","team = {}\n","\n","\n","def get_data(name):\n","    url = f'https://pokeapi.co/api/v2/pokemon/{name.lower()}'\n","    response = requests.get(url)\n","    if response.status_code == 200:\n","        data = response.json()\n","        types = []\n","        for i in data['types']:\n","            types.append(i['type']['name'])\n","        stats = {}\n","        for stat in data['stats']:\n","            stats[stat['stat']['name']] = stat['base_stat']\n","        return {\n","            'name': data['name'],\n","            'types': types,\n","            'base_experience': data['base_experience'],\n","            'stats': stats,\n","        }\n","    print(f\"Покемон '{name}' не найден.\")\n","\n","\n","def add(name):\n","    if name in team:\n","        print(f\"Покемон '{name}' уже в команде.\")\n","        return\n","    data = get_data(name)\n","    if data:\n","        team[name] = data\n","        print(f\"Покемон '{name}' теперь в команде.\")\n","\n","\n","def remove(name):\n","    if name in team:\n","        del team[name]\n","        print(f\"Покемон '{name}' удалён из команды.\")\n","    else:\n","        print(f\"Покемон '{name}' не найден в команде.\")\n","\n","\n","def view():\n","    if not team:\n","        print('В команде пока нет покемонов.')\n","        return\n","    print('Команда покемонов:')\n","    for name, data in team.items():\n","        print(f\"~ {name} (Типы: {', '.join(data['types'])}, \"\n","              f\"Опыт: {data['base_experience']})\")\n","\n","\n","def find(name):\n","    if name in team:\n","        data = team[name]\n","        print(f'Информация о {name}:')\n","        print(f\"  Типы: {', '.join(data['types'])}\")\n","        print(f\"  Опыт: {data['base_experience']}\")\n","        print('  Характеристики:')\n","        for stat, value in data['stats'].items():\n","            print(f'    {stat}: {value}')\n","    else:\n","        print(f\"Покемон '{name}' не найден в команде.\")\n","\n","\n","def battle(pokemon1, pokemon2):\n","    if pokemon1 not in team or pokemon2 not in team:\n","        print('Оба покемона должны быть в вашей команде для боя.')\n","        return\n","    pokem1 = team[pokemon1]\n","    pokem2 = team[pokemon2]\n","    pokem1_attack = pokem1['stats']['attack']\n","    pokem2_attack = pokem2['stats']['attack']\n","    pokem1_hp = pokem1['stats']['hp']\n","    pokem2_hp = pokem2['stats']['hp']\n","    print(f'\\nТренировочный бой: {pokemon1} и {pokemon2}.')\n","    print(f'{pokemon1} (HP: {pokem1_hp}, Атака: {pokem1_attack})')\n","    print(f'{pokemon2} (HP: {pokem2_hp}, Атака: {pokem2_attack})')\n","    while pokem1_hp > 0 and pokem2_hp > 0:\n","        pokem2_hp -= pokem1_attack\n","        if pokem2_hp <= 0:\n","            print(f'{pokemon1} одержал победу.')\n","            return\n","        pokem1_hp -= pokem2_attack\n","        if pokem1_hp <= 0:\n","            print(f'{pokemon2} одержал победу.')\n","            return\n","\n","\n","def main():\n","    while True:\n","        print('\\n1. Добавить покемона в команду')\n","        print('2. Удалить покемона из команды')\n","        print('3. Просмотреть команду')\n","        print('4. Найти покемона в команде')\n","        print('5. Устроить тренировочный бой')\n","        print('6. Завершение работы')\n","        choice = input('Выберите действие: ')\n","        if choice == '1':\n","            name = input('Введите имя покемона: ')\n","            add(name)\n","        elif choice == '2':\n","            name = input('Введите имя покемона: ')\n","            remove(name)\n","        elif choice == '3':\n","            view()\n","        elif choice == '4':\n","            name = input('Введите имя покемона: ')\n","            find(name)\n","        elif choice == '5':\n","            pokemon1 = input('Введите имя первого покемона: ')\n","            pokemon2 = input('Введите имя второго покемона: ')\n","            battle(pokemon1, pokemon2)\n","        elif choice == '6':\n","            print('Работа завершена.')\n","            break\n","        else:\n","            print('Ошибка. Попробуйте снова.')\n","\n","\n","if __name__ == '__main__':\n","    main()"],"metadata":{"id":"NnGYp1MTqi5k","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731848228748,"user_tz":-300,"elapsed":211561,"user":{"displayName":"Тимофей Пушмин","userId":"15316752486813990329"}},"outputId":"a897f917-e78d-4597-cde0-60815d78a2fd"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","1. Добавить покемона в команду\n","2. Удалить покемона из команды\n","3. Просмотреть команду\n","4. Найти покемона в команде\n","5. Устроить тренировочный бой\n","6. Завершение работы\n","Выберите действие: 1\n","Введите имя покемона: raticate\n","Покемон 'raticate' теперь в команде.\n","\n","1. Добавить покемона в команду\n","2. Удалить покемона из команды\n","3. Просмотреть команду\n","4. Найти покемона в команде\n","5. Устроить тренировочный бой\n","6. Завершение работы\n","Выберите действие: 1\n","Введите имя покемона: charmander\n","Покемон 'charmander' теперь в команде.\n","\n","1. Добавить покемона в команду\n","2. Удалить покемона из команды\n","3. Просмотреть команду\n","4. Найти покемона в команде\n","5. Устроить тренировочный бой\n","6. Завершение работы\n","Выберите действие: 1\n","Введите имя покемона: pikachu\n","Покемон 'pikachu' теперь в команде.\n","\n","1. Добавить покемона в команду\n","2. Удалить покемона из команды\n","3. Просмотреть команду\n","4. Найти покемона в команде\n","5. Устроить тренировочный бой\n","6. Завершение работы\n","Выберите действие: 3\n","Команда покемонов:\n","~ raticate (Типы: normal, Опыт: 145)\n","~ charmander (Типы: fire, Опыт: 62)\n","~ pikachu (Типы: electric, Опыт: 112)\n","\n","1. Добавить покемона в команду\n","2. Удалить покемона из команды\n","3. Просмотреть команду\n","4. Найти покемона в команде\n","5. Устроить тренировочный бой\n","6. Завершение работы\n","Выберите действие: 2\n","Введите имя покемона: charmander\n","Покемон 'charmander' удалён из команды.\n","\n","1. Добавить покемона в команду\n","2. Удалить покемона из команды\n","3. Просмотреть команду\n","4. Найти покемона в команде\n","5. Устроить тренировочный бой\n","6. Завершение работы\n","Выберите действие: 4\n","Введите имя покемона: charmander\n","Покемон 'charmander' не найден в команде.\n","\n","1. Добавить покемона в команду\n","2. Удалить покемона из команды\n","3. Просмотреть команду\n","4. Найти покемона в команде\n","5. Устроить тренировочный бой\n","6. Завершение работы\n","Выберите действие: 4\n","Введите имя покемона: raticate\n","Информация о raticate:\n","  Типы: normal\n","  Опыт: 145\n","  Характеристики:\n","    hp: 55\n","    attack: 81\n","    defense: 60\n","    special-attack: 50\n","    special-defense: 70\n","    speed: 97\n","\n","1. Добавить покемона в команду\n","2. Удалить покемона из команды\n","3. Просмотреть команду\n","4. Найти покемона в команде\n","5. Устроить тренировочный бой\n","6. Завершение работы\n","Выберите действие: 4\n","Введите имя покемона: pikachu\n","Информация о pikachu:\n","  Типы: electric\n","  Опыт: 112\n","  Характеристики:\n","    hp: 35\n","    attack: 55\n","    defense: 40\n","    special-attack: 50\n","    special-defense: 50\n","    speed: 90\n","\n","1. Добавить покемона в команду\n","2. Удалить покемона из команды\n","3. Просмотреть команду\n","4. Найти покемона в команде\n","5. Устроить тренировочный бой\n","6. Завершение работы\n","Выберите действие: 5\n","Введите имя первого покемона: pikachu\n","Введите имя второго покемона: raticate\n","\n","Тренировочный бой: pikachu и raticate.\n","pikachu (HP: 35, Атака: 55)\n","raticate (HP: 55, Атака: 81)\n","pikachu одержал победу.\n","\n","1. Добавить покемона в команду\n","2. Удалить покемона из команды\n","3. Просмотреть команду\n","4. Найти покемона в команде\n","5. Устроить тренировочный бой\n","6. Завершение работы\n","Выберите действие: 6\n","Выход из программы.\n"]}]}]}